rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    // These functions get the user's document from the 'users' collection
    // and check the value of the 'role' field.
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return getUserRole() == 'Admin';
    }

    function isEditor() {
      return getUserRole() == 'Edit' || isAdmin(); // Admins have all editor privileges
    }

    function isViewer() {
        return getUserRole() == 'View' || isEditor(); // Editors and Admins have all viewer privileges
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read and write to any user document to manage roles.
      // Users can read their own data.
      // Users can update their own data, but cannot change their role.
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if isAdmin();
      allow update: if (request.auth.uid == userId && !('role' in request.resource.data)) || isAdmin();
      allow delete: if isAdmin();
    }

    // Rules for the 'settings' collection
    match /settings/{setting} {
      // Viewers, Editors, and Admins can read settings.
      // Only Editors and Admins can write to settings.
      allow read: if isViewer();
      allow write: if isEditor();
    }

    // Rules for the 'contacts' collection
    match /contacts/{contact} {
      // Viewers, Editors, and Admins can read contacts.
      allow read: if isViewer();

      // Editors and Admins can create and update contacts.
      allow create, update: if isEditor();

      // Only Admins can delete contacts.
      allow delete: if isAdmin();
    }
  }
}